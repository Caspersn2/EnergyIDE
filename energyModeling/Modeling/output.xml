<class>
  <name>measureClass</name>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Empty</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12894832011198484</mean>
      <completed-runs>4286</completed-runs>
      <deviation>0,11404560352460817</deviation>
      <ErrorMargin>0,0017420173031524485</ErrorMargin>
      <ErrorPercent>0,013509422237060536</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadInt32</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12496699999999322</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04585603872214818</deviation>
      <ErrorMargin>0,0014500952683486536</ErrorMargin>
      <ErrorPercent>0,011603825556736837</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadZero</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12977369999999905</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,055769426635529994</deviation>
      <ErrorMargin>0,0017635841196993588</ErrorMargin>
      <ErrorPercent>0,01358968820107134</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadOne</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13208050000000637</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04960671442321039</deviation>
      <ErrorMargin>0,0015687020481487074</ErrorMargin>
      <ErrorPercent>0,011876863338256834</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadTwo</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,128257599999997</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04823647872844189</deviation>
      <ErrorMargin>0,0015253713908813902</ErrorMargin>
      <ErrorPercent>0,011893029269855556</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadThree</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1297628999999995</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,05122580987341377</deviation>
      <ErrorMargin>0,0016199023418672915</ErrorMargin>
      <ErrorPercent>0,012483555329507108</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadFour</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13442179999999737</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,0878889694769233</deviation>
      <ErrorMargin>0,0027792932475209516</ErrorMargin>
      <ErrorPercent>0,020675911552449126</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadFive</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12932539999999912</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,028580801196556243</deviation>
      <ErrorMargin>0,0009038042913358349</ErrorMargin>
      <ErrorPercent>0,0069886061928734885</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadSix</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13659070000000195</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,06581571021588321</deviation>
      <ErrorMargin>0,0020812755010380327</ErrorMargin>
      <ErrorPercent>0,015237314846750203</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadSeven</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13258000000000028</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,049361035360012066</deviation>
      <ErrorMargin>0,0015609329940174759</ErrorMargin>
      <ErrorPercent>0,01177351783087549</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadEight</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13142140000000335</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,056419063203253045</deviation>
      <ErrorMargin>0,0017841274317527496</ErrorMargin>
      <ErrorPercent>0,013575623389742494</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadInt32Shotform</name>
    <result>Failed</result>
    <error-message>System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.InvalidProgramException: Common Language Runtime detected an invalid program.
   at MyMethod()
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.Emit.DynamicMethod.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at Modeling.measureClass.runMethod(DynamicMethod method, ILGenerator ilg) in C:\Users\Caspe\Documents\GitHub\EnergyIDE\energyModeling\Modeling\Program.cs:line 35
   at Modeling.measureClass.LoadInt32Shotform(Int32 value) in C:\Users\Caspe\Documents\GitHub\EnergyIDE\energyModeling\Modeling\Program.cs:line 147</error-message>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadInt64</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12407809999999615</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,031735735808661215</deviation>
      <ErrorMargin>0,0010035720837673504</ErrorMargin>
      <ErrorPercent>0,008088228976486435</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadFloat32</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12469390000000281</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,025860366419316726</deviation>
      <ErrorMargin>0,0008177765901157383</ErrorMargin>
      <ErrorPercent>0,006558272618914958</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadFloat64</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1276507000000073</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03880717532063239</deviation>
      <ErrorMargin>0,0012271906357067346</ErrorMargin>
      <ErrorPercent>0,009613661622746012</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadNull</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1319325000000059</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03275799627678045</deviation>
      <ErrorMargin>0,0010358987981794177</ErrorMargin>
      <ErrorPercent>0,007851733258896567</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadInt32MANYTIMES</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1266350999999965</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03301881433501706</deviation>
      <ErrorMargin>0,0010441465893687191</ErrorMargin>
      <ErrorPercent>0,008245317367528813</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>LoadString</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12368309999999919</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,0457103859508296</deviation>
      <ErrorMargin>0,00144548932329983</ErrorMargin>
      <ErrorPercent>0,011687039889037706</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Add</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12377130000000247</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04125624466712519</deviation>
      <ErrorMargin>0,0013046370085329083</ErrorMargin>
      <ErrorPercent>0,010540707001808031</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Sub</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12419919999999679</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,025361798441360873</deviation>
      <ErrorMargin>0,0008020104863280871</ErrorMargin>
      <ErrorPercent>0,006457452916992282</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Mul</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12611310000000117</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,029114009753961032</deviation>
      <ErrorMargin>0,0009206658264287527</ErrorMargin>
      <ErrorPercent>0,007300318733174778</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Neg</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12668920000000194</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03081988495547767</deviation>
      <ErrorMargin>0,0009746103368366657</ErrorMargin>
      <ErrorPercent>0,007692923602301149</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Not</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12985340000000972</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,02982600944275006</deviation>
      <ErrorMargin>0,0009431812335277965</ErrorMargin>
      <ErrorPercent>0,007263431173367242</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>OrBitwise</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12325099999999342</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,023514933363530496</deviation>
      <ErrorMargin>0,0007436074845584057</ErrorMargin>
      <ErrorPercent>0,0060332774951801236</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>Rem</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12360779999999827</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03849307854999472</deviation>
      <ErrorMargin>0,0012172580236975495</ErrorMargin>
      <ErrorPercent>0,009847744427920944</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchDefineLabelEmpty</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13380110000000162</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04506684934294162</deviation>
      <ErrorMargin>0,001425138908913583</ErrorMargin>
      <ErrorPercent>0,010651174832744767</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchToTarget</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1399617000000057</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,09419141673260986</deviation>
      <ErrorMargin>0,0029785941291314223</ErrorMargin>
      <ErrorPercent>0,021281494359751994</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchIfFalseTrue</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1358544000000006</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,047960547481810535</deviation>
      <ErrorMargin>0,001516645678711743</ErrorMargin>
      <ErrorPercent>0,011163758249359139</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchIfFalseFalse</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1340650000000035</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04668159429846302</deviation>
      <ErrorMargin>0,001476201627910732</ErrorMargin>
      <ErrorPercent>0,011011088859215258</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchIfTrueFalse</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13559500000000543</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04899708143337452</deviation>
      <ErrorMargin>0,0015494237603021113</ErrorMargin>
      <ErrorPercent>0,011426850254818018</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchIfTrueTrue</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1399220999999973</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,07232975470028964</deviation>
      <ErrorMargin>0,0022872676745418477</ErrorMargin>
      <ErrorPercent>0,016346722029914443</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32EqTrue</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13584850000000248</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,0590043124410103</deviation>
      <ErrorMargin>0,0018658801908580205</ErrorMargin>
      <ErrorPercent>0,013735007680305535</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32EqFalse</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13548210000000027</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03049159272352077</deviation>
      <ErrorMargin>0,0009642288249254244</ErrorMargin>
      <ErrorPercent>0,00711702007073571</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32GE</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,13200630000000718</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,04557069736979105</deviation>
      <ErrorMargin>0,0014410719825078417</ErrorMargin>
      <ErrorPercent>0,01091669096480822</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32G</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,1266892999999955</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,0267228761105045</deviation>
      <ErrorMargin>0,0008450515413969565</ErrorMargin>
      <ErrorPercent>0,006670267665832762</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32LE</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12852639999999688</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,03013046810370512</deviation>
      <ErrorMargin>0,0009528090617476262</ErrorMargin>
      <ErrorPercent>0,007413333461044963</ErrorPercent>
    </measurement>
  </method>
  <method>
    <declaring-type>Modeling.measureClass</declaring-type>
    <name>BranchInt32L</name>
    <result>Passed</result>
    <measurement>
      <name>timer</name>
      <mean>0,12647460000000374</mean>
      <completed-runs>1000</completed-runs>
      <deviation>0,027360920211037764</deviation>
      <ErrorMargin>0,0008652282674501422</ErrorMargin>
      <ErrorPercent>0,006841122782361966</ErrorPercent>
    </measurement>
  </method>
</class>